PROJECT(project)
cmake_minimum_required(VERSION 2.6)
SET(CMAKE_BUILD_TYPE "Debug")
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g2 -ggdb")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_C_FLAGS_RELEASE "-DNDEBUG -O3")
set(CMAKE_CXX_FLAGS_RELEASE "-DNDEBUG -O3")
set(CMAKE_CXX_FLAGS "-fPIC")  
set(CMAKE_C_FLAGS "-fPIC")
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
add_definitions(-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS)

 if (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
     set(ARCH "amd64")
 elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "amd64")
     set(ARCH "amd64")
 elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "AMD64")
     # cmake reports AMD64 on Windows, but we might be building for 32-bit.
     if (CMAKE_CL_64)
         set(ARCH "amd64")
     else ()
         set(ARCH "386")
     endif ()
 elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86")
     set(ARCH "386")
 elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i386")
     set(ARCH "386")
 elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
     set(ARCH "386")
 elseif (${CMAKE_SYSTEM_PROCESSOR} MATCHES "^arm.*")
     set(ARCH "arm")
 elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "aarch64")
     set(ARCH "aarch64")
 else ()
     message(FATAL_ERROR "Unknown processor:" ${CMAKE_SYSTEM_PROCESSOR})
 endif ()
set(CMAKE_CXX_FLAGS -std=gnu++11)
include_directories(.)
include_directories(libquic/)
add_subdirectory(libquic)

set(EXECUTABLE_NAME "t_recv_manager")
add_executable(${EXECUTABLE_NAME} ${CMAKE_SOURCE_DIR}/t_recv_manager.cc)
target_link_libraries(${EXECUTABLE_NAME}  quic pthread)

set(EXECUTABLE_NAME "t_random")
add_executable(${EXECUTABLE_NAME} ${CMAKE_SOURCE_DIR}/t_random.cc)
target_link_libraries(${EXECUTABLE_NAME}  quic pthread)

